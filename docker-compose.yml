services:
  backend:
    build:
      args:
      - NODE_ENV=${NODE_ENV}
      context: .
      target: ${NODE_ENV}
    command: npm run dev
    environment:
      - DATABASE_DB=${MARIADB_DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=/run/secrets/db-password
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - NODE_ENV=${NODE_ENV}
      - EXPRESS_PORT=${EXPRESS_PORT}
    ports:
      - ${EXPRESS_PORT}:${EXPRESS_PORT}
      - ${EXPRESS_DEBUGGING_PORT}:${EXPRESS_DEBUGGING_PORT}
      - ${EXPRESS_TESTING_PORT}:${EXPRESS_TESTING_PORT}
    secrets:
      - db-password
    volumes:
      - ./src:/code/src:ro
      - ./package.json:/code/package.json
      - ./package-lock.json:/code/package-lock.json
      - ./nodemon.json:/code/nodemon.json
      - ./tsconfig.json:/code/tsconfig.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
    depends_on:
      - db
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - private
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE_NAME}
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
networks:
  public:
  private:
volumes:
  back-notused:
  db-data:
secrets:
  db-password:
    file: secrets/db-password.txt